# Generated by Django 5.1.6 on 2025-07-11 06:33

import uuid

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="User",
            fields=[
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(blank=True, null=True, verbose_name="last login"),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True, verbose_name="date joined")),
                ("updated_at", models.DateTimeField(auto_now=True, verbose_name="last update")),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        verbose_name="user identifier",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        blank=True, max_length=255, null=True, verbose_name="username"
                    ),
                ),
                (
                    "email",
                    models.EmailField(max_length=255, unique=True, verbose_name="email address"),
                ),
                ("is_active", models.BooleanField(default=True, verbose_name="active")),
                ("is_staff", models.BooleanField(default=False, verbose_name="staff status")),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "user",
                "verbose_name_plural": "users",
            },
        ),
        migrations.CreateModel(
            name="UserStats",
            fields=[
                ("created_at", models.DateTimeField(auto_now_add=True, verbose_name="date joined")),
                ("updated_at", models.DateTimeField(auto_now=True, verbose_name="last update")),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        verbose_name="user stats identifier",
                    ),
                ),
                (
                    "total_games",
                    models.IntegerField(
                        default=0,
                        help_text="Total number of games played by the user.",
                        validators=[django.core.validators.MinValueValidator(0)],
                        verbose_name="total games",
                    ),
                ),
                (
                    "completed_games",
                    models.IntegerField(
                        default=0,
                        help_text="Total number of games completed by the user.",
                        validators=[django.core.validators.MinValueValidator(0)],
                        verbose_name="completed games",
                    ),
                ),
                (
                    "abandoned_games",
                    models.IntegerField(
                        default=0,
                        help_text="Total number of games abandoned by the user.",
                        validators=[django.core.validators.MinValueValidator(0)],
                        verbose_name="abandoned games",
                    ),
                ),
                (
                    "stopped_games",
                    models.IntegerField(
                        default=0,
                        help_text="Total number of games stopped by the user.",
                        validators=[django.core.validators.MinValueValidator(0)],
                        verbose_name="stopped games",
                    ),
                ),
                (
                    "in_progress_games",
                    models.IntegerField(
                        default=0,
                        help_text="Total number of games in progress.",
                        validators=[django.core.validators.MinValueValidator(0)],
                        verbose_name="in progress games",
                    ),
                ),
                (
                    "won_games",
                    models.IntegerField(
                        default=0,
                        help_text="Total number of games won by the user.",
                        validators=[django.core.validators.MinValueValidator(0)],
                        verbose_name="won games",
                    ),
                ),
                (
                    "lost_games",
                    models.IntegerField(
                        default=0,
                        help_text="Total number of games played by the user.",
                        validators=[django.core.validators.MinValueValidator(0)],
                        verbose_name="lost games",
                    ),
                ),
                (
                    "win_rate",
                    models.FloatField(
                        default=0.0,
                        help_text=["Player's win rate."],
                        validators=[
                            django.core.validators.MinValueValidator(0.0),
                            django.core.validators.MaxValueValidator(1.0),
                        ],
                        verbose_name="win rate",
                    ),
                ),
                (
                    "total_time_seconds",
                    models.IntegerField(
                        default=0,
                        help_text="Total time spent by the user across all games in seconds.",
                        validators=[django.core.validators.MinValueValidator(0)],
                        verbose_name="total time (seconds)",
                    ),
                ),
                (
                    "average_time_seconds",
                    models.FloatField(
                        blank=True,
                        help_text="Average time spent by the user across all games in seconds.",
                        null=True,
                        validators=[django.core.validators.MinValueValidator(0.0)],
                        verbose_name="average time (seconds)",
                    ),
                ),
                (
                    "best_time_seconds",
                    models.IntegerField(
                        blank=True,
                        help_text="Best time spent by the user across all games in seconds.",
                        null=True,
                        validators=[django.core.validators.MinValueValidator(0)],
                        verbose_name="best time (seconds)",
                    ),
                ),
                (
                    "total_score",
                    models.IntegerField(
                        default=0,
                        help_text="Total score achieved by the user across all games.",
                        validators=[django.core.validators.MinValueValidator(0)],
                        verbose_name="total score",
                    ),
                ),
                (
                    "average_score",
                    models.FloatField(
                        blank=True,
                        help_text="Average score achieved by the user across all games.",
                        null=True,
                        validators=[django.core.validators.MinValueValidator(0.0)],
                        verbose_name="average score",
                    ),
                ),
                (
                    "best_score",
                    models.IntegerField(
                        blank=True,
                        help_text="Best score achieved by the user across all games.",
                        null=True,
                        validators=[django.core.validators.MinValueValidator(0)],
                        verbose_name="best score",
                    ),
                ),
                (
                    "total_hints_used",
                    models.IntegerField(
                        default=0,
                        help_text="Total number of hints used by the user across all games.",
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(3),
                        ],
                        verbose_name="total hints used",
                    ),
                ),
                (
                    "total_checks_used",
                    models.IntegerField(
                        default=0,
                        help_text="Total number of checks used by the user across all games.",
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(3),
                        ],
                        verbose_name="total checks used",
                    ),
                ),
                (
                    "total_deletions",
                    models.IntegerField(
                        default=0,
                        help_text="Total number of deletions made by the user across all games.",
                        validators=[django.core.validators.MinValueValidator(0)],
                        verbose_name="total deletions",
                    ),
                ),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="stats",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="user",
                    ),
                ),
            ],
            options={
                "verbose_name": "user stats",
                "verbose_name_plural": "user stats",
            },
        ),
    ]
